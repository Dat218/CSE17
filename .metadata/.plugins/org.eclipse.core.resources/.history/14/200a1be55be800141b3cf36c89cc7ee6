/*
CSE 17
Daniel Truong
862607977
Program #5 DEADLINE: April 23, 2015
Program Description: Digital Music Library with Advanced Sorting
*/
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
public class Playlist {
	private String name;
	private ArrayList<Song> songs;
	
	public Playlist(String name) {
		songs = new ArrayList<Song>();
		this.name = name;
	}
	
	public String getName() {
		return this.name;
	}
	
	public Song getSong(int index) {
		if (index < 1 || index > songs.size()) {
			return null;
		}
		else {
			return songs.get(index-1);
		}
	}
	
	public int getNumSongs() {
		return songs.size();
	}
	
	public void addSong(Song song) {
		songs.add(song);
	}
	
	public void printList() {
		int count = 1; 
		for (int i=0; i<songs.size(); i++) {
			System.out.printf("%d\t", count);
			songs.get(i).printSongRow();
			count++;
		}
	}
	
	public void sortByYear() {
		ComparatorSorts.mergeSort(songs, Song.SongYearComparator);
	}
	
	public void sortByArtist() {
		ComparatorSorts.quickSort(songs, Song.SongArtistComparator);
	}
	
	public void sortByTitle() {
		ComparatorSorts.quickSort(songs, Song.SongTitleComparator);
	}
	
	public static Playlist readPlayListFromFile(String filename) {
		try {
			File file = new File(filename);
			Scanner fileContent = new Scanner(file);
			String description = fileContent.nextLine();
			Playlist playlist = new Playlist(description);
			fileContent.useDelimiter("\\t|[\\n\\r\\f]+");
			while(fileContent.hasNext()) {
				String title = fileContent.next();
				String artist = fileContent.next();
				String album = fileContent.next();
				int year = fileContent.nextInt();
				String time = fileContent.next();
				Song song = new Song(title, artist, album, year, time);
				playlist.songs.add(song);
			}
			return playlist;
		} catch (FileNotFoundException e) {
			System.out.println("Invalid file.");
		}
		return playlist;
	}
	
	public static void main(String[] args) {
		if (args.length > 0) {
			ArrayList<Playlist> playlists = new ArrayList<Playlist>();
			for (int i=0; i<args.length; i++) {
				String filename = args[i];
				Playlist playlist = readPlayListFromFile(filename);
				playlists.add(playlist);
				playlist.printList();
				System.out.println("");
			}
			for (int m=0; m<playlists.size(); m++) {
				if (m == 0) {
					playlists.get(m).sortByArtist();
				}
				else if (m == playlists.size()-1 && m != 0) {
					playlists.get(m).sortByYear();
				}
				else {
					playlists.get(m).sortByTitle();
				}
				playlists.get(m).printList();
				System.out.println("");
			}
		}
		else {
			System.out.println("NEED ONE ARGUMENT");
		}
	}
}